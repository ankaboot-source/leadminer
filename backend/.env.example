#### LEADMINER API ####

# Used to hash user emails and data in logs while mining
LEADMINER_API_HASH_SECRET = change_me
LEADMINER_MINING_ID_GENERATOR_LENGTH = 10
# One of the syslog levels defined in RFC5424 (debug, info, notice, warning...)
LEADMINER_API_PORT = 8081

#### LOGGING ####
LEADMINER_API_LOG_LEVEL = debug
GRAFANA_LOKI_HOST =

# Sends notification every x processed items
LEADMINER_FETCH_BATCH_SIZE = 100

FRONTEND_HOST = http://localhost:8082

#### IMAP ####

# Enable or disable fetching Email bodies
IMAP_FETCH_BODY = false
# Number of milliseconds to wait to be authenticated after an IMAP connection has been established
IMAP_AUTH_TIMEOUT = 10000
# Number of milliseconds to wait for a connection to be established
IMAP_CONNECTION_TIMEOUT = 10000
# Maximum number of simultaneous IMAP connections allowed. It is recommended to keep this value between 1 and 15.
IMAP_MAX_CONNECTIONS = 10

#### SUPABASE ####

SUPABASE_PROJECT_URL = http://localhost:54321
SUPABASE_SECRET_PROJECT_TOKEN =
# Postgres connection string. Only needed when CONNECTION_TYPE is 'native'
PG_CONNECTION_STRING = postgresql://postgres:postgres@localhost:54322/postgres

# 'native' to use native pgsql calls through node-postgres or 'pgrest' to use the REST interface
CONNECTION_TYPE = native

# This key is used in the frontend. It respects RLS rules and configured policies
# SUPABASE_PUBLIC_PROJECT_TOKEN=

#### REDIS ####

# Optional
# REDIS_USERNAME=
# REDIS_PASSWORD=

REDIS_HOST = localhost
REDIS_PORT = 6379
REDIS_TLS = false

# Expiration timeout for redis entries
REDIS_EXPIRATION_TIMEOUT = 259200

REDIS_CONSUMER_BATCH_SIZE=100


#### PROVIDERS ####

# GOOGLE CONFIG: 
# OAUTH: https://developers.google.com/identity/protocols/oauth2
GOOGLE_CLIENT_ID = PLEASE MAKE SURE TO FILL THIS FIELD
GOOGLE_SECRET = PLEASE MAKE SURE TO FILL THIS FIELD
# OPENID-CONNECT: https://accounts.google.com/.well-known/openid-configuration
GOOGLE_AUTHORIZATION_URL = https://accounts.google.com/o/oauth2/v2/auth
GOOGLE_ISSUER_URL = https://accounts.google.com
GOOGLE_USERINFO_URL = https://openidconnect.googleapis.com/v1/userinfo
GOOGLE_TOKEN_URL = https://oauth2.googleapis.com/token
GOOGLE_JWK_URI = https://www.googleapis.com/oauth2/v3/certs
# IMAP: https://developers.google.com/gmail/imap/imap-smtp
GOOGLE_IMAP_SERVER = imap.gmail.com
GOOGLE_IMAP_PORT = 993

# MICROSOFT CONFIG:
# OAUTH: https://learn.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow
AZURE_CLIENT_ID = PLEASE MAKE SURE TO FILL THIS FIELD
AZURE_SECRET = PLEASE MAKE SURE TO FILL THIS FIELD
# OPENID-CONNECT: https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration
AZURE_ISSUER_URL = PLEASE MAKE SURE TO FILL THIS FIELD
AZURE_AUTHORIZATION_URL = https://login.microsoftonline.com/common/oauth2/v2.0/authorize
AZURE_USERINFO_URL = https://graph.microsoft.com/oidc/userinfo
AZURE_TOKEN_URL = https://login.microsoftonline.com/common/oauth2/v2.0/token
AZURE_JWK_URI = https://login.microsoftonline.com/common/discovery/v2.0/keys
# IMAP: https://support.microsoft.com/en-us/office/pop-imap-and-smtp-settings-8361e398-8af4-4e97-b147-6c6c4ac95353
MICROSOFT_IMAP_SERVER = outlook.office365.com
MICROSOFT_IMAP_PORT = 993

#### SENTRY ####

# Make sure your provide a Sentry DSN and change the value to "true" if you want to activate Sentry for reporting and monitoring (https://docs.sentry.io/platforms/javascript/)
# Create your own credentials here: https://sentry.io
SENTRY_ENABLED = false
SENTRY_DSN =
