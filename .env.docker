
# ==============| FRONTEND |============= #
FRONTEND_HOST = http://localhost:8082                 # ( REQUIRED ) Frontend base URL
SERVER_ENDPOINT = http://localhost:8081               # ( REQUIRED ) Backend API endpoint
IMAGE_REVERSE_PROXY =                                 # ( OPTIONAL ) Proxy for validating or checking image URLs
AVERAGE_EXTRACTION_RATE = 50                          # ( OPTIONAL ) Estimated extraction rate (messages processed per second)

ENABLE_CREDIT = true                                  # ( REQUIRED ) Enable or disable credit-based operations
CREDITS_PER_CONTACT = 1                               # ( REQUIRED ) Number of credits charged per contact enrichment/export
EXTERNAL_REFILL_CREDITS_LINK =                        # ( OPTIONAL ) External link for users to purchase or refill credits

# ==============| BACKEND |============= #
APP_NAME  = leadminer
FRONTEND_HOST = http://localhost:8082           # ( REQUIRED ) 
LEADMINER_API_PORT = 8081                       # ( REQUIRED )
LEADMINER_API_HOST = http://localhost:8081      # ( REQUIRED )
LEADMINER_API_HASH_SECRET = change_me           # ( REQUIRED ) Used for hashing secrets
LEADMINER_MINING_ID_GENERATOR_LENGTH = 10       # ( REQUIRED ) Length of the task id

REDIS_PUBSUB_COMMUNICATION_CHANNEL = 'stream-management'    # Communication channel between task-manager & workers
REDIS_SIGNATURE_STREAM_NAME = 'email-signature-stream'
REDIS_SIGNATURE_STREAM_CONSUMER_GROUP = 'email-signature-consumer-group'
REDIS_CLEANING_STREAM_CONSUMER_GROUP = 'email-verification-consumer-group' # consumer group for cleaning worker
REDIS_EXTRACTING_STREAM_CONSUMER_GROUP = 'email-messages-consumer-group'   # Consumer group for extracting worker
REDIS_EMAIL_SIGNATURE_CONSUMER_BATCH_SIZE = 500
REDIS_EMAIL_VERIFICATION_CONSUMER_BATCH_SIZE = 500

SIGNATURE_USE_LLM = false
SIGNATURE_OPENROUTER_API_KEY = 'test-key'

THEDIG_URL = http://127.0.0.1:8083/thedig/
THEDIG_API_KEY = _
VOILANORBERT_URL = http://127.0.0.1:8083/voilanorbert/2018-01-08/
VOILANORBERT_USERNAME = any_string
VOILANORBERT_API_KEY = test-api-key
ENRICH_LAYER_URL = https://enrichlayer.com/
ENRICH_LAYER_API_KEY = _

# ZEROBOUNCE_API_KEY =
# MAILERCHECK_API_KEY =
EMAILS_QUOTA_REACHER  = 600 
EMAILS_QUOTA_MAILERCHECK = 600
EMAILS_QUOTA_ZEROBOUNCE = 3000000
REACHER_HOST = https://stoplight.io/mocks/reacher/backend/68673 # ( REQUIRED )
REACHER_API_KEY = 'test-key'
# REACHER_HEADER_SECRET =
# REACHER_SMTP_FROM =
# REACHER_SMTP_HELLO =
# REACHER_PROXY_PORT =
# REACHER_PROXY_HOST =
# REACHER_PROXY_USERNAME =
# REACHER_PROXY_PASSWORD =
# REACHER_REQUEST_TIMEOUT_MS =
# REACHER_SMTP_CONNECTION_TIMEOUT_SECONDS =
# REACHER_SMTP_CONNECTION_RETRIES =
REACHER_HOTMAIL_USE_HEADLESS =true
# REACHER_MICROSOFT365_USE_API =
REACHER_GMAIL_USE_API =true
# REACHER_YAHOO_USE_API =
REACHER_RATE_LIMITER_REQUESTS = 60
REACHER_RATE_LIMITER_INTERVAL = 60000 # 1 minute

# ==============| MICRO-SERVICES |============= #
EMAIL_FETCHING_SERVICE_PORT = 8084                     # ( REQUIRED )
EMAIL_FETCHING_SERVICE_URL = http://localhost:8083     # ( REQUIRED )
EMAIL_FETCHING_SERVICE_NAME = email-fetcher-service    # ( REQUIRED )
EMAIL_FETCHING_SERVICE_API_TOKEN = 'test-key'          # ( REQUIRED )
FETCHING_BATCH_SIZE_TO_SEND = 200                      # Number of messages per sending batch
FETCHING_CHUNK_SIZE_PER_CONNECTION = 2000              # Number of messages fetched per IMAP connection chunk
FETCHING_MAX_CONNECTIONS_PER_FOLDER = 10               # Maximum concurrent connections per IMAP folder

# ==============| ANALYTICS |============= #
POSTHOG_API_KEY =                                    # ( OPTIONAL ) PostHog API key for event tracking
POSTHOG_INSTANCE_ADDRESS =                           # ( OPTIONAL ) PostHog instance address (URL)
# POSTHOG_PROXY_ADDRESS=                             # ( OPTIONAL ) PostHog proxy address    (URL)
# POSTHOG_INGEST_INSTANCE=                           # ( OPTIONAL ) PostHog ingest instance  (URL)
# POSTHOG_STATIC_ASSETS_PROXY=                       # ( OPTIONAL ) PostHog static assets proxy (URL)

# ==============|  SENTRY |============= #
# SENTRY_DSN_FRONTEND=                                # ( OPTIONAL ) Sentry dsn
# SENTRY_ENVIRONMENT_FRONTEND=                        # ( OPTIONAL ) Sentry environment
# SENTRY_DSN_BACKEND =                                # ( OPTIONAL ) Sentry DSN for reporting and monitoring
# SENTRY_ENVIRONMENT_BACKEND = 'leadminer-backend-prod'


# ==============| LOGGING / MONITORING |============= #
# GRAFANA_LOKI_HOST =               # Use Loki transport for logging (Default is console)
LEADMINER_API_LOG_LEVEL = debug     # Logging level (debug, info, notice, warning...)
EMAIL_FETCHING_SERVICE_LOG_LEVEL = debug

# ==============| SUPABASE INSTANCES |============= #
SAAS_SUPABASE_PROJECT_URL = http://127.0.0.1:54321    # ( REQUIRED ) SaaS Supabase project URL
SAAS_SUPABASE_ANON_KEY = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0  # ( REQUIRED ) Anon key (respects RLS and policy rules)

SUPABASE_PROJECT_URL = http://127.0.0.1:54321         # ( REQUIRED ) Supabase project URL
SUPABASE_ANON_KEY = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0   # ( REQUIRED ) Anon key (respects RLS and policy rules)
PG_CONNECTION_STRING = postgresql://postgres:postgres@127.0.0.1:54322/postgres  # ( REQUIRED ) Postgres connection string

# ==============| REDIS INSTANCE |============= #
REDIS_HOST = localhost                  # ( REQUIRED ) Redis host
REDIS_PORT = 6379                       # ( REQUIRED ) Redis port
# REDIS_USERNAME =                      # ( OPTIONAL ) Redis username
# REDIS_PASSWORD =                      # ( OPTIONAL ) Redis password
REDIS_EVICTION_POLICY = allkeys-lru     # ( REQUIRED ) Redis Eviction policies: noeviction, allkeys-lru, allkeys-random, volatile-lru, volatile-random, volatile-ttl
REDIS_MAXMEMORY = 1gb                   # ( REQUIRED ) Max memory used by redis, adjust it depending on your server capacity.
REDIS_DB = 0                            # ( REQUIRED ) Redis db
REDIS_TLS = false                       # ( REQUIRED ) Enable or disable TLS for Redis
REDIS_EXPIRATION_TIMEOUT = 7776000      # ( REQUIRED ) Expiration timeout (90 days ) for Redis entries
REDIS_CONSUMER_BATCH_SIZE = 100         # ( REQUIRED ) The entries to read from each stream

# ==============| IMAP CONNECTION CONFIG |============= #
IMAP_FETCH_BODY = true              # Enable or disable fetching Email bodies
IMAP_MAX_CONNECTIONS = 10           # Maximum number of simultaneous IMAP connections allowed. It is recommended to keep this value between 1 and 15.
IMAP_AUTH_TIMEOUT = 10000           # Milliseconds to wait for authentication after an IMAP connection is established
IMAP_CONNECTION_TIMEOUT = 10000     # Milliseconds to wait for a connection to be established

# ==============| OAUTH CONFIG |============= #
GOOGLE_CLIENT_ID = 21825381029-993l33883t26n48fv11mmm049j6qn6lh.apps.googleusercontent.com # ( REQUIRED ) Google client ID
GOOGLE_SECRET = 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     # ( REQUIRED ) Google secret
AZURE_CLIENT_ID = your_azure_client_id # ( REQUIRED ) Azure client ID
AZURE_SECRET = your_azure_client_secret # ( REQUIRED ) Azure secret


